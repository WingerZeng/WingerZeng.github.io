<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PTA1074 反转链表</title>
    <url>/2019/10/14/PTA1074-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>given L being 1→2→3→4→5→6, if K=3, then you must output 3→2→1→6→5→4; if K=4, you must output 4→3→2→1→5→6.</p>
<h2 id="解题关键"><a href="#解题关键" class="headerlink" title="解题关键"></a>解题关键</h2><p>用哈希表存储链表，在链表头需要另外插入一个空节点指向原链表头。<br>反转的迭代中需要三个临时指针，分别指向被反转节点及其之前、之后的位置。注意逆转节点段头尾的处理。注意链表尾边界情况的处理。</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> key=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">int</span> val; </span><br><span class="line">	<span class="keyword">int</span> next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;Node&gt; ahash(<span class="number">100001</span>);</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> root, n, k;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; root &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">int</span> temp1, temp2, temp3;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; temp1 &gt;&gt; temp2 &gt;&gt; temp3;</span><br><span class="line">		ahash[temp1] = Node(&#123; temp1,temp2,temp3 &#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	ahash[<span class="number">100000</span>].next = root;</span><br><span class="line">	<span class="keyword">int</span> it, preit, postit; <span class="comment">//分别指向节点段的末尾，节点段之前，节点段之后</span></span><br><span class="line">	it = root;</span><br><span class="line">	preit = <span class="number">100000</span>;</span><br><span class="line">	<span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (it != <span class="number">-1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (count != k) &#123;</span><br><span class="line">			count++;</span><br><span class="line">			it = ahash[it].next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			postit = ahash[it].next;</span><br><span class="line">			<span class="keyword">int</span> tempit= ahash[preit].next;</span><br><span class="line">			<span class="keyword">int</span> tempit_ = ahash[tempit].next;</span><br><span class="line">			<span class="keyword">int</span> tempit__ = ahash[tempit_].next;</span><br><span class="line">			<span class="keyword">while</span>(tempit != it) &#123;</span><br><span class="line">				ahash[tempit_].next = tempit;</span><br><span class="line">				tempit = tempit_;</span><br><span class="line">				tempit_ = tempit__;</span><br><span class="line">				<span class="comment">//注意处理边界情况</span></span><br><span class="line">				<span class="keyword">if</span> (tempit__ != <span class="number">-1</span>)</span><br><span class="line">					tempit__ = ahash[tempit__].next;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> newpre = ahash[preit].next;</span><br><span class="line">			ahash[newpre].next = postit;</span><br><span class="line">			ahash[preit].next = it;</span><br><span class="line"></span><br><span class="line">			preit = newpre;</span><br><span class="line">			it = postit;</span><br><span class="line">			count = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = ahash[<span class="number">100000</span>].next; i != <span class="number">-1</span>; i = ahash[i].next) &#123;</span><br><span class="line">		<span class="keyword">if</span>(ahash[i].next == <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"%05d %d -1\n"</span>, ahash[i].key, ahash[i].val);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, ahash[i].key, ahash[i].val, ahash[i].next);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA1038 数字段排序</title>
    <url>/2019/10/14/PTA1038-%E6%95%B0%E5%AD%97%E6%AE%B5%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//核心，判断哪个数字段排前面的算法</span></span><br><span class="line"><span class="comment">//局部规划+贪婪？，本质上就是先乱序建立好一个数字段，</span></span><br><span class="line"><span class="comment">//交换两个数字段，如果交换后有提升，则采纳；如果无提升，就不采纳</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; lhs, <span class="keyword">const</span> <span class="built_in">string</span>&amp; rhs)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> temp1 = lhs + rhs;</span><br><span class="line">	<span class="built_in">string</span> temp2 = rhs + lhs;</span><br><span class="line">	<span class="keyword">if</span> (temp1 &lt; temp2) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (temp1 == temp2 &amp;&amp; temp1.size() &lt; temp2.size()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; nums;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="built_in">string</span> temp;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">		nums.push_back(temp);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(nums.begin(), nums.end(),cmp);</span><br><span class="line">	<span class="built_in">string</span> result;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.size(); i++) &#123;</span><br><span class="line">		result += nums[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入参数全0的情况</span></span><br><span class="line">	<span class="keyword">int</span> off = result.find_first_not_of(<span class="string">'0'</span>);</span><br><span class="line">	<span class="keyword">if</span> (off == <span class="number">-1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; result.substr(off);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/10/14/myFirstTry/</url>
    <content><![CDATA[<h1 id="Winger强势入场"><a href="#Winger强势入场" class="headerlink" title="Winger强势入场"></a>Winger强势入场</h1><p>2019-10-14 经历了各种艰难，这个博客走起来了</p>
<img src="/2019/10/14/myFirstTry/1.jpg" title="走起！">]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>杂文</tag>
        <tag>摄影</tag>
      </tags>
  </entry>
</search>
